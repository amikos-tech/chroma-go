openapi: 3.0.2
info:
  title: ChromaDB API
  description: This is OpenAPI schema for ChromaDB API.
  version: 1.0.0
  x-logo:
    url: https://www.trychroma.com/chroma-logo.png
paths:
  /api/v1:
    get:
      summary: Root
      operationId: root
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: number
                type: object
                title: Response Root Api V1 Get
  /api/v1/reset:
    post:
      summary: Reset
      operationId: reset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                title: Response Reset Api V1 Reset Post
  /api/v1/version:
    get:
      summary: Version
      operationId: version
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: string
                title: Response Version Api V1 Version Get
  /api/v1/heartbeat:
    get:
      summary: Heartbeat
      operationId: heartbeat
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: number
                type: object
                title: Response Heartbeat Api V1 Heartbeat Get
  /api/v1/tenants:
    post:
      summary: Create Tenant
      operationId: create_tenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenant'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/tenants/{tenant}:
    get:
      summary: Get Tenant
      operationId: get_tenant
      parameters:
        - required: true
          schema:
            type: string
            title: Tenant Name
          name: tenant
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/databases:
    post:
      summary: Create Database
      operationId: create_database
      parameters:
        - name: tenant
          required: false
          schema:
            type: string
            title: Tenant Name
            default: 'default_tenant'
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabase'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/databases/{database}:
    get:
      summary: Get Database
      operationId: get_database
      parameters:
        - name: tenant
          required: false
          schema:
            type: string
            title: Tenant Name
            default: 'default_tenant'
          in: query
        - required: true
          schema:
            type: string
            title: Database Name
          name: database
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/pre-flight-checks:
    get:
      summary: Pre Flight Checks
      operationId: pre_flight_checks
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreflightChecks'
  /api/v1/collections:
    get:
      summary: List Collections
      operationId: list_collections
      parameters:
        - name: tenant
          required: false
          schema:
            type: string
            title: Tenant Name
            default: 'default_tenant'
          in: query
        - name: database
          required: false
          schema:
            type: string
            title: Database Name
            default: 'default_database'
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Collection'
                type: array
                title: Response List Collections Api V1 Collections Get
    post:
      summary: Create Collection
      operationId: create_collection
      parameters:
        - name: tenant
          required: false
          schema:
            type: string
            title: Tenant Name
            default: 'default_tenant'
          in: query
        - name: database
          required: false
          schema:
            type: string
            title: Database Name
            default: 'default_database'
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCollection'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/count_collections:
    get:
      summary: Count Collections
      operationId: count_collections
      parameters:
        - name: tenant
          required: false
          schema:
            type: string
            title: Tenant Name
            default: 'default_tenant'
          in: query
        - name: database
          required: false
          schema:
            type: string
            title: Database Name
            default: 'default_database'
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: integer
                title: Response Count Collections Api V1 Count Collections Get
  /api/v1/collections/{collection_id}/add:
    post:
      summary: Add
      operationId: add
      parameters:
        - required: true
          schema:
            type: string
            title: Collection Id
          name: collection_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEmbedding'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                title: Response Add Api V1 Collections  Collection Id  Add Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/update:
    post:
      summary: Update
      operationId: update
      parameters:
        - required: true
          schema:
            type: string
            title: Collection Id
          name: collection_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmbedding'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                title: Response Update Api V1 Collections  Collection Id  Update Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/upsert:
    post:
      summary: Upsert
      operationId: upsert
      parameters:
        - required: true
          schema:
            type: string
            title: Collection Id
          name: collection_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEmbedding'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                title: Response Upsert Api V1 Collections  Collection Id  Upsert Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/get:
    post:
      summary: Get
      operationId: get
      parameters:
        - required: true
          schema:
            type: string
            title: Collection Id
          name: collection_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEmbedding'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/delete:
    post:
      summary: Delete
      operationId: delete
      parameters:
        - required: true
          schema:
            type: string
            title: Collection Id
          name: collection_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEmbedding'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  type: string
                  format: uuid
                type: array
                title: Response Delete Api V1 Collections  Collection Id  Delete Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/count:
    get:
      summary: Count
      operationId: count
      parameters:
        - required: true
          schema:
            type: string
            title: Collection Id
          name: collection_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: integer
                title: Response Count Api V1 Collections  Collection Id  Count Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}/query:
    post:
      summary: Get Nearest Neighbors
      operationId: get_nearest_neighbors
      parameters:
        - required: true
          schema:
            type: string
            title: Collection Id
          name: collection_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryEmbedding'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_name}:
    get:
      summary: Get Collection
      operationId: get_collection
      parameters:
        - required: true
          schema:
            type: string
            title: Collection Name
          name: collection_name
          in: path
        - name: tenant
          required: false
          schema:
            type: string
            title: Tenant Name
            default: 'default_tenant'
          in: query
        - name: database
          required: false
          schema:
            type: string
            title: Database Name
            default: 'default_database'
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      summary: Delete Collection
      operationId: delete_collection
      parameters:
        - required: true
          schema:
            type: string
            title: Collection Name
          name: collection_name
          in: path
        - name: tenant
          required: false
          schema:
            type: string
            title: Tenant Name
            default: 'default_tenant'
          in: query
        - name: database
          required: false
          schema:
            type: string
            title: Database Name
            default: 'default_database'
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/collections/{collection_id}:
    put:
      summary: Update Collection
      operationId: update_collection
      parameters:
        - required: true
          schema:
            type: string
            title: Collection Id
          name: collection_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCollection'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AddEmbedding:
      properties:
        embeddings:
          items:
            anyOf:
              - items:
                  type: number
                type: array
              - items:
                  type: integer
                type: array
          title: Embeddings
        metadatas:
          items:
            type: object
          type: array
          title: Metadatas
        documents:
          items:
            type: string
          type: array
          title: Documents
        ids:
          items:
            type: string
          type: array
          title: Ids
      type: object
      required:
        - ids
      title: AddEmbedding
    Collection:
      properties:
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid
          title: Id
        metadata:
          additionalProperties:
            anyOf:
              - type: string
              - type: integer
                format: int32
              - type: number
                format: float
              - type: boolean
          type: object
          title: Metadata
      type: object
      required:
        - name
        - id
      title: Collection
    CreateCollection:
      properties:
        name:
          type: string
          title: Name
        metadata:
          additionalProperties: true
          type: object
          title: Metadata
        get_or_create:
          type: boolean
          title: Get Or Create
          default: false
      type: object
      required:
        - name
      title: CreateCollection
    DeleteEmbedding:
      properties:
        ids:
          items:
            type: string
          type: array
          title: Ids
        where:
          type: object
          title: Where
        where_document:
          type: object
          title: Where Document
      type: object
      title: DeleteEmbedding
    GetEmbedding:
      properties:
        ids:
          items:
            type: string
          type: array
          title: Ids
        where:
          type: object
          title: Where
        where_document:
          type: object
          title: Where Document
        sort:
          type: string
          title: Sort
        limit:
          type: integer
          title: Limit
        offset:
          type: integer
          title: Offset
        include:
          items:
            anyOf:
              - type: string
                enum:
                  - documents
              - type: string
                enum:
                  - embeddings
              - type: string
                enum:
                  - metadatas
              - type: string
                enum:
                  - distances
          type: array
          title: Include
          default:
            - ns
            - documents
      type: object
      title: GetEmbedding
    GetResult:
      properties:
        ids:
          items:
            type: string
          type: array
          title: Ids
        embeddings:
          items:
            anyOf:
              - items:
                  type: number
                type: array
              - items:
                  type: integer
                type: array
          type: array
          title: Embeddings
        documents:
          items:
            type: string
          type: array
          title: Documents
        metadatas:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Metadatas
      type: object
      required:
        - ids
        - embeddings
        - documents
        - metadatas
      title: GetResult
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    QueryEmbedding:
      properties:
        where:
          type: object
          title: Where
          default: { }
        where_document:
          type: object
          title: Where Document
          default: { }
        query_embeddings:
          items:
            anyOf:
              - items:
                  type: number
                type: array
              - items:
                  type: integer
                type: array
          type: array
          title: Query Embeddings
        n_results:
          type: integer
          title: N Results
          default: 10
        include:
          items:
            anyOf:
              - type: string
                enum:
                  - documents
              - type: string
                enum:
                  - embeddings
              - type: string
                enum:
                  - metadatas
              - type: string
                enum:
                  - distances
          type: array
          title: Include
          default:
            - metadatas
            - documents
            - distances
      type: object
      required:
        - query_embeddings
      title: QueryEmbedding
    QueryResult:
      properties:
        ids:
          items:
            items:
              type: string
            type: array
          type: array
          title: Ids
        embeddings:
          items:
            items:
              anyOf:
                - items:
                    type: number
                  type: array
                - items:
                    type: integer
                  type: array
            type: array
          type: array
          title: Embeddings
        documents:
          items:
            items:
              type: string
            type: array
          type: array
          title: Documents
        metadatas:
          items:
            items:
              additionalProperties: true
              type: object
            type: array
          type: array
          title: Metadatas
        distances:
          items:
            items:
              type: number
            type: array
          type: array
          title: Distances
      type: object
      required:
        - ids
        - embeddings
        - documents
        - metadatas
        - distances
      title: QueryResult
    UpdateCollection:
      properties:
        new_name:
          type: string
          title: New Name
        new_metadata:
          type: object
          title: New Metadata
      type: object
      title: UpdateCollection
    UpdateEmbedding:
      properties:
        embeddings:
          items:
            anyOf:
              - items:
                  type: number
                type: array
              - items:
                  type: integer
                type: array
          title: Embeddings
        metadatas:
          items:
            type: object
          type: array
          title: Metadatas
        documents:
          items:
            type: string
          type: array
          title: Documents
        ids:
          items:
            type: string
          type: array
          title: Ids
      type: object
      required:
        - ids
      title: UpdateEmbedding
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    CreateDatabase:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
        - name
      title: CreateDatabase
    CreateTenant:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
        - name
      title: CreateTenant
    Database:
      type: object
      title: Database
      properties:
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid
          title: Id
        tenant:
          type: string
          title: Tenant
    Tenant:
      type: object
      title: Tenant
      properties:
        name:
          type: string
          title: Name
    PreflightChecks:
      type: object
      additionalProperties: true
      title: Response Pre Flight Checks Api V1 Pre Flight Checks Get
