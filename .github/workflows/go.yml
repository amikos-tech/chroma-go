name: Go Tests

on:
  pull_request:
    branches: [ "main" , "**" ]

jobs:
  paths-filter:
    name: Get changed paths
    runs-on: ubuntu-latest
    outputs:
      embeddings: ${{ steps.changes.outputs.embeddings }}
      rerankings: ${{ steps.changes.outputs.rerankings }}
      docs: ${{ steps.changes.outputs.docs }}
      basev1: ${{ steps.changes.outputs.basev1 }}
      basev2: ${{ steps.changes.outputs.basev2 }}
    steps:
      - name: Get changed paths
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            basev1:
              - 'pkg/commons/**'
              - 'internal/**'
              - 'metadata/**'
              - 'types/**'
              - 'collection/**'
              - 'tests/**'
              - 'where/**'
              - 'where_document/**'
              - 'chroma.go'
              - 'go.mod'
              - 'go.sum'
            basev2:
              - 'pkg/api/v2/**'
              - 'pkg/commons/**'
              - 'internal/**'
              - 'go.mod'
              - 'go.sum'
            embeddings:
              - 'pkg/embeddings/**'
              - 'pkg/commons/embed/**'
            rerankings:
              - 'pkg/rerankings/**'
              - 'pkg/commons/cohere/**'
            docs:
              - 'docs/**'
  lint:
    name: Lint
    runs-on: ubuntu-latest
    environment: Test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  apiv1:
    name: Test Chroma API V1
    runs-on: ubuntu-latest
    if: needs.paths-filter.outputs.basev1 == 'true'
    needs: [lint,paths-filter]
    strategy:
      matrix:
        chroma-version: ["0.4.8", "0.4.24","0.5.5", "0.5.17","0.6.2"]
    environment: Test
    steps:
    - uses: actions/checkout@v4
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
    - name: Build
      run: make build
    - name: Test
      run: make test
      env:
        CHROMA_VERSION: ${{ matrix.chroma-version }}
  apiv2:
    name: Test Chroma API V2
    runs-on: ubuntu-latest
    needs: [lint,paths-filter]
    strategy:
      matrix:
        chroma-version: ["0.6.3","1.0.5"]
    if: needs.paths-filter.outputs.basev2 == 'true'
    environment: Test
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: make build
      - name: Test
        run: make test-v2
        env:
          CHROMA_VERSION: ${{ matrix.chroma-version }}
  ef:
    name: Test Embedding Functions
    runs-on: ubuntu-latest
    needs: [lint,paths-filter]
    if: needs.paths-filter.outputs.embeddings == 'true'
    environment: Test
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: make build
      - name: Test
        run: make test-ef
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
          HF_API_KEY: ${{ secrets.HF_API_KEY }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_GATEWAY_ENDPOINT: ${{ secrets.CF_GATEWAY_ENDPOINT }}
          TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
          VOYAGE_API_KEY: ${{ secrets.VOYAGE_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          NOMIC_API_KEY: ${{ secrets.NOMIC_API_KEY }}
          JINA_API_KEY: ${{ secrets.JINA_API_KEY }}
  rf:
    name: Test Ranking Functions
    runs-on: ubuntu-latest
    needs: [lint,paths-filter]
    if: needs.paths-filter.outputs.rerankings == 'true'
    environment: Test
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Build
        run: make build
      - name: Test
        run: make test-rf
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
          HF_API_KEY: ${{ secrets.HF_API_KEY }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_GATEWAY_ENDPOINT: ${{ secrets.CF_GATEWAY_ENDPOINT }}
          TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
          VOYAGE_API_KEY: ${{ secrets.VOYAGE_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
          NOMIC_API_KEY: ${{ secrets.NOMIC_API_KEY }}
          JINA_API_KEY: ${{ secrets.JINA_API_KEY }}
